{"version":3,"file":"main.a7334226cec89f601064.hot-update.js","sources":["webpack:///./src/components/atoms/Typography/index.jsx","webpack:///./src/components/atoms/Typography/index.stories.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\n// sizeとスタイルのマップ\nconst sizeMap = {\n  xs: css`\n    font-size: 12px;\n    line-height: 1.66;\n`,\n  s: css`\n    font-size: 14px;\n    line-height: 1.66;\n`,\n  m: css`\n    font-size: 16px;\n    line-height: 1.66;\n`,\n  subtitle: css`\n    font-size: 18px;\n    line-height: 1.66;\n`,\n  title: css`\n    font-size: 20px;\n    line-height: 1.66;\n`,\n};\n\n// colorとスタイルのマップ\nconst colorsMap = {\n  inherit: 'inherit',\n  black: '#000000',\n  red: '#ff3300',\n  gray: '#8c8c8c',\n};\n\nexport const sizes = Object.keys(sizeMap);\nexport const colors = Object.keys(colorsMap);\nexport const displays = ['initial', 'block', 'inline', 'inline-block'];\nexport const aligns = ['left', 'right', 'center'];\n\nconst Root = styled.p`\n  margin: 0;\n  color: ${({ color }) => colorsMap[color]};\n  ${({ size }) => sizeMap[size]};\n  display: ${({ display }) => display};\n  text-align: ${({ align }) => align};\n  font-weight: ${({ bold }) => (bold ? 'bold' : 'normal')};\n`;\n\nconst Typography = ({\n  className,\n  size,\n  color,\n  display,\n  align,\n  bold,\n  children,\n}) => (\n  // 各プロパティをStyled componentで作成したRootに渡す\n  <Root\n    className={className}\n    size={size}\n    color={color}\n    display={display}\n    align={align}\n    bold={bold}\n  >\n    {children}\n  </Root>\n);\n\nTypography.propTypes = {\n  className: PropTypes.string,\n  size: PropTypes.oneOf(sizes),\n  color: PropTypes.oneOf(colors),\n  display: PropTypes.oneOf(displays),\n  align: PropTypes.oneOf(aligns),\n  bold: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nTypography.defaultProps = {\n  className: '',\n  size: 'm',\n  color: 'inherit',\n  align: 'left',\n  bold: false,\n  display: 'block',\n};\n\nexport default Typography;","import React from 'react';\nimport Typography, {colors, sizes, aligns} from '.';\n\nexport default {title:'atoms/Typography'};\n\nconst sampleText ='this components IS Typography';\n\nexport const colorVariation = () => colors.map((c) => (\n  <Typography key={c} color={c}>\n    {c}\n    .\n    {sampleText}\n  </Typography>\n));\ncolorVariation.story = {\n  name: 'color',\n};\n\nexport const sizeVariation = () => sizes.map((s) =>(\n  <Typography key={s} size={s}>\n    {s}\n    .\n    {sampleText}\n  </Typography>\n));\nsizeVariation.story = {\n  name:'size',\n};\n\n\nexport const displayBlack = () => (\n  <>\n    <Typography display =\"block\">\n      {sampleText}\n    </Typography>\n    <Typography display =\"block\">\n      {sampleText}\n    </Typography>\n  </>\n);\ndisplayBlock.story = {\n  name:`display=\"block\"`,\n};\n\nexport const displayInline = () => (\n  <>\n    <Typography display=\"inline\">\n      {sampleText}\n    </Typography>\n    <Typography display=\"inline\">\n      {sampleText}\n    </Typography>\n  </>\n);\ndisplayInline.story = {\n  name:'display=\"inline\"',\n};\n\nexport const displayInlineBlock = () => (\n  <>\n    <Typography display=\"inline-block\" style={{width:'100px'}}>\n      {sampleText}\n    </Typography>\n    <Typography display=\"inline-block\" style={{width:'100px'}}>\n      {sampleText}\n    </Typography>\n  </>\n);\n\ndisplayInlineBlock.story = {\n  name:'display= \"inline-block\"',\n};\n\nexport const align = () => align = () => aligns.map((a) => (\n  <Typography key = {a} align={a}>\n      {a}\n      .\n      {sampleText}\n  </Typography>\n));\nalign.story = {\n  name:'align',\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AAIA;AAIA;AAIA;AAIA;AAjBA;AACA;AAuBA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAVA;AAAA;AACA;AADA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FA;AACA;;;;AAEA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAOA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAOA;AACA;AADA;AAKA;AAAA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAJA;AADA;AAUA;AACA;AADA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAJA;AADA;AAUA;AACA;AADA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AAWA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAOA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}